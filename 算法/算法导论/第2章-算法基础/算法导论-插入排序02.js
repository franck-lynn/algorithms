/*
插入排序的思路:
1,将数组分成两类,手上牌与手下牌,手上牌是有序的,手下牌是无序的
  手下牌拿出一张依次与手上牌比较,直到插入合适的位置
2,插入的位置被占用后,后面的牌依次右移动
过程:
设有一数组无序:
var a = [45,32,4,12,4,8,2]
1,假设k左边已经排好序 [32,45,4,12,4,8,2]
                           k
                    [32,45,4,12,4,8,2] 
                       i-1,i,i+1 
                     k     
                    [4,32,45,12,4,8,2]      
2,第k张牌与左边从右到左依次比较,如果第k张牌小于比较的牌,
  就把比较的位置给第k张牌     
插入排序要是基础,  
手上有序下无序,
捡起第i存起来,
前大后面等于前,
等于数组向后挪,
挪完指针指向此
就是要插此位置                    
 */

function insertSort(a) {
    for (var i=1;i<a.length;i++){
        var key = a[i];// 此时i=2 a[2]=4
        // 先只看内循环
        while (a[i-1]>key && i>0){ //
            // 如果前一张牌大
            // 当前牌就是前一张牌,例如:45>4,a[i]=a[i-1],即a[i]=45,此时i-1=1,i=2
            // a[2]=45,a[1]=45是没有变化的 [32,45,45,12,4,8,2] ,a[2]=4已经保存下来了
            a[i] = a[i-1];
            // 再翻前一张牌,例如,翻到32了.此时i=1,a[i-1]=a[0]=32>4,所以a[1]=32,[32,32,45,12,4,8,2],此时i=1;循环结束
            // i--=0;
            i--
        }
        // a[0]=2 [4,32,45,12,4,8,2]
        a[i]=key;
    }
    console.log(a)
}
var a = [45,32,4,12,4,8,2,1]
insertSort(a)














