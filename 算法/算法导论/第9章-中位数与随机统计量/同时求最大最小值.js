/**
 * https://blog.csdn.net/laoniu_c/article/details/38468167
 * 我们将一对输入元素相互进行比较,得到较小值和较大值,这是第1次比较,
 * 把较小值与当前最小值元素比较,这是第2次比较,
 * 把较大值与当前最大值元素比较,这是第3次比较.
 * 如何设置已知的当前最大值和最小值?
 * 1,奇数情况:最大值和最小值都是第1个元素.
 * 2,偶数情况,对前2个元素做一次比较,得最大值和最小值的初值,然后和奇数的情形是一样的
 *  有数组如下,奇数情况:
 *  max = 3, min=3
 *  示例分析:
 *  [3,2,8,4,3,9,6];
 *  分割这个数组, 按照6作为主元进行划分,小于6的在左边,大于6的在右边,
 *  假设划分后的数组如下:
 *  [3,2,4,3,  6,  8,9],
 *  最小值肯定在左边,最大值肯定在右边
 */

function findMinMax01(a) {
    var len = a.length;
    var i = 0; //数组的下界
    var j = len-1; // 数组上界
    var min=a[i], max=a[j];
    var count = 0; // 用来统计比较次数
    while (i<=j){
        if(a[i]<a[j]){
            // 先取出数组中第1个元素和最后一个元素进行大小
            if(min>a[i]) min = a[i];
            if(max<a[j]) max = a[j];
            count++;
        }else{ // a[i]>a[j]的情况
            if(min>a[j]) min = a[j];
            if(max<a[i]) max = a[i];
        }
        
        i++; j--;
    }
    
    console.log(`最大值:${max},最小值${min},统计次数:${count}`)
}
var a = [3,2,8,4,3,9,6];
findMinMax01(a)










