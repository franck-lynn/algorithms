/**
 * Created by franck.lynn on 2018/5/17 23:38.
 */
/*
设有n英寸的钢条,
长度i     1   2   3   4   ... n-1      n
价格p(i)  1   5   8   9       p(N-1)   p(N)  
收益r(n)  
当n=1时,不切割时收益最大,r1 = max(p1,r1)
当n=2时,不切割时收益最大,r2 = max(p2,r1+r1)
当n=3时,不切割时收益最大,r3 = max(p3,r1+r2,r2+r1)
当n=4时,最大收益是 先不切割看看收益多少?再把钢条分成1,3两段,2,2两段,(i,n-i),i=1,2,3,看看哪种是最大值,  
        r4 = max(p4,r1+r3,r2+r2,r3+r1)
当n=5时,最大收益是 先不切割看看收益多少?再把钢条分成[1,4],[2,3],[3,2],[4,1]段,即 (i,n-i),i=1,2,3,4.
       对于分成[1,4]段的钢条,看看n=4时的最大收益.
        r5 = max(p5,r1+r4,r2+r3,r3+r2,r4+r1)
 */

// 以价格数组p[1..n]和整数n为输入,返回长度为n的钢条的最大收益.
/**
1. 假设有4英寸的钢条, 从第1英寸开始, 可以选择切割还是不切割
2. 当切割时, 收益就是切i英寸的价格 + 余下部分4-i的最优解
3. 当不切割时, 收益就是整个 i英寸钢条
4. i是从1开始的, 即从1英寸位置切, 一直到4英寸(不切割时)就包含了所有的切割方案
 */
function cutRod(p,n) {
    // n == 0,表示没有钢条
    if(n==0) 
        return 0;
    // r表示收益
    var r = 0;
    for(let i = 1; i <= n; i++){
        r = Math.max(r, p[i-1] + cutRod(p,n-i));
        // r = Math.max(r, p[i-1].p + cutRod(p,n-i));
    }
    return r;
}
/*
执行过程分析:
n=5;
   i=1; max(r,p[0]+cutRod(p,4);
               |      |
               1      n=4
                      i=1;max(r,p[0]+cutRod(p,3);
                                 |
                                 1
                                 n=3;max(r,p[0]+cutRod(p,2)
                                            |
                                            1    
                                            n=2;r=0;max(r,p[0]+cutRod(p,1)             // 返回2,j继续运行i=2;max(r,p[1]+cutRod(p,0)
                                                       |                                                           |      |
                                                       1                                                           5      0
                                                       n=1;max(r=0,p[0]+cutRod(p,0)  // 返回1 
 */   
var p = [1, 5, 8, 9, 10, 17, 17, 20, 24, 30];
/*var p = [
    // 长度为1,价格为1
    {l:1,p:1},
    // 长度为2,价格为5,...
    {l:2,p:5},
    {l:3,p:8},
    {l:4,p:9},
    {l:5,p:10},
    {l:6,p:17},
    {l:8,p:17},
    {l:9,p:20},
    {l:10,p:24},
    {l:11,p:30} 
]*/

for(let i = 1;i<10;i++){
    var r = cutRod(p,i)
    console.log(r)
}

/*
1
5
8
10
13
17
18
22
25
 */



